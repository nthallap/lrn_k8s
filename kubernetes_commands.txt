Kubernetes commands
===========================

kubernetes commands syntax

kubectl [command] [type] [name] [flags]

commands expamles:
create, get, describe, delete, log, exec, edit, run, apply, scale ...
type:
pod(s)------> po
deployment(s) ---------> deploye
replicaset(s) ---------> rs
replicationcontroler(s) --------------> rc
service(s) ------> svc
deamonset(s) -------> ds
namespace(s) -----------> ns
persistentvolume(s)---------> pv
persistentvolumeclaim(s) ---------> pvc
jobs(s)
cronjob(s)


api version for kind:
-------------------
Pod: v1
Service: v1
ConfigMap: v1
Secret: v1
PersistentVolume: v1
PersistentVolumeClaim: v1
Namespace: v1

Deployment: apps/v1
StatefulSet: apps/v1
DaemonSet: apps/v1
ReplicaSet: apps/v1

Job: batch/v1
CronJob: batch/v1beta1
Ingress: networking.k8s.io/v1
Role: rbac.authorization.k8s.io/v1
RoleBinding: rbac.authorization.k8s.io/v1
ClusterRole: rbac.authorization.k8s.io/v1
ClusterRoleBinding: rbac.authorization.k8s.io/v1

kubernetes concepts : https://kubernetes.io/docs/concepts/

1. kubectl run
    This command is usful to deplpy pods
    kubectl run <pod_name> --image=<docker_image>
    kubectl run nginx --image=nginx

2.  kubectl get pod(s)
    TO get the list of pods deployed
    kubectl get pods
    kubectl get pods -o wide --> to see more details about the pods
    kubectl get po

3. kubectl get events
    to get the events happend 

4. kubectl get nodes
    to get the number of nodes in the cluster
    kubectl gt no -o wide

5. kubectl describe
    To describe a pod to get the more details about perticular pod
    kubectl describe <pod_name> -n <name_space>
    kubectl describe nginx

6. kubectl get logs
    to get logs of a running pod
    kubectl get logs <pod_name> -n <name_space>

7. kubectl delete
    kubectl delete <type_of_object> --> pod/service/secret/deployment
    to delete any type_of_object we use above command
    kubectl delete pod nginx

8. kubectl create ns 
    to create a name space
    kubectl create ns <name_space>
    kubectl create ns naga

    kubectl get ns  --> to see all the namespaces
    kubectl delete ns  --> to delete namespace
    
9. kubectl apply/create -f <file_name>.yaml
    to create pod/secret/deployments....
    ex: kubectl apply -f https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/application/nginx-app.yaml

10. kubectl get replicationcontroler
    kubectl apply/create -f <replicationcontroler>.yaml
    kubectl get replicationcontroler
    kubectl replace -f <replicationcontroler>.yaml --> to update replica set
    kubectl scale --replicas=6 -f replicationcontroler.yaml
    kubectl scale --replicas=6 replicaset <replicationcontroler_name>
    kubectl edit replicationcontroler <replicationcontroler_name> --> to modify a rplicaset config 

11. kubectl get replicaset
    to get the current replicationcontroler
    kubectl apply/create -f <replica_set>.yaml
    kubectl scale --replicas=7 replicationcontroller replication-nginx
    kubectl scale --replicas=4 -f replication_controler.yaml
    kubectl edit replicaset <replicationcontroler_name> --> to modify a rplicaset config 

12. kubectl get replicationcontroller
    to get the current replicaset
    kubectl apply/create -f <replica_set>.yaml
    kubectl scale --replicas=7 replicationcontroller replication-nginx
    kubectl scale --replicas=4 -f replication_controler.yaml

13. kubectl get all
    to get the all instances of kubernetes

14. kubectl create -f <deploy_yaml>.yaml
    kubectl get deployment   --> to get the list of deployments
    kubectl create/set -f <deploy_yaml>.yaml  --> to apply latest change in yaml file
    kubectl rollout status deployment/<deployment_name> --> to check the status of deployment
    kubectl rollout history deployment/<deployment_name>  --> to check the history of deployment
    kubectl rollout undo deployment/<deployment_name>  --> to revert the last changes of deployment
    kubectl set image deployment/<deployment_name> <containter_name>=<image_name>  --> to update docker image 
    kubectl describe deployment <deployment_name> --> to get the details of deployment

How to unintsll kubernetes object with helm
----------------
helm list -A  --> list all object from all Name spaces
helm uninstall <ojbect> -n <name-space>

Delete NS in termination state
----------
NS=`kubectl get ns |grep Terminating | awk 'NR==1 {print $1}'` && kubectl get namespace "$NS" -o json   | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/"   | kubectl replace --raw /api/v1/namespaces/$NS/finalize -f -


